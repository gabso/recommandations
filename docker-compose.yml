version: '2'

services:
  zookeeper:
    image: 'bitnami/zookeeper:3'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - backend   
  kafka:
    image: 'bitnami/kafka:2'
    ports:
      - '9092:9092'
      -  '29092:29092'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
    depends_on:
      - zookeeper
    networks:
      - backend      
  aerospike:
    image: aerospike/aerospike-server
    networks:
      - backend    
  api:
    image: sample-express-app
    build: .
    ports:
      - "5000:5000"
    links:
      - aerospike      
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - AEROSPIKE_HOST=aerospike
    depends_on:
      - zookeeper      
      - kafka
      - aerospike
    networks:
      - backend      
  web-cli:
    image: sample-express-app
    networks:
      - backend
    depends_on:
      - zookeeper      
      - kafka
      - aerospike    
    command: sh
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  aerospike_data:
    driver: local   
    
networks:
  backend:
    driver: bridge